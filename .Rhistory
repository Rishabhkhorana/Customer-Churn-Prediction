### ROC-AUC diagram
predROCR <- prediction(prediction_test, Telecom_test$Churn)
perfROCR <- performance(predROCR, "tpr", "fpr")
plot(perfROCR, colorize = TRUE)
performance(predROCR, "auc")@y.values
abline(a=0, b=1, col="#8AB63F")
###### Creating a decision tree here############
rm(list = ls())
# Clear plots
dev.off()
# Clear console
cat("\014")
getwd()
pacman::p_load(pacman, tidyverse, gmodels,ROCR, rpart, rpart.plot,caret,RColorBrewer,rattle)
#### loading the data
telecom_data<- read.csv("Telco-Customer-Churn.csv")
#### creating factors####
telecom_data$gender <- as.factor(telecom_data$gender)
telecom_data$SeniorCitizen<-as.factor(telecom_data$SeniorCitizen)
telecom_data$Partner<-as.factor(telecom_data$Partner)
telecom_data$Dependents<-as.factor(telecom_data$Dependents)
telecom_data$PhoneService<- as.factor(telecom_data$PhoneService)
telecom_data$MultipleLines<-as.factor(telecom_data$MultipleLines)
telecom_data$InternetService<-as.factor(telecom_data$InternetService)
telecom_data$OnlineSecurity<-as.factor(telecom_data$OnlineSecurity)
telecom_data$OnlineBackup<-as.factor(telecom_data$OnlineBackup)
telecom_data$DeviceProtection<-as.factor(telecom_data$DeviceProtection)
telecom_data$TechSupport<-as.factor(telecom_data$TechSupport)
telecom_data$StreamingTV<-as.factor(telecom_data$StreamingTV)
telecom_data$StreamingMovies<-as.factor(telecom_data$StreamingMovies)
telecom_data$Contract<-as.factor(telecom_data$Contract)
telecom_data$PaperlessBilling<-as.factor(telecom_data$PaperlessBilling)
telecom_data$PaymentMethod<-as.factor(telecom_data$PaymentMethod)
telecom_data$Churn<- as.factor(telecom_data$Churn)
set.seed(1807)
training.samples <- telecom_data$Churn %>%
createDataPartition(p = 0.80, list = FALSE) ### We have 80% in training and  20% in test data set
Telecom_train <- telecom_data[training.samples, ]
Telecom_test <- telecom_data[-training.samples, ]
summary(Telecom_train$Churn) #the % of not churned is 73.45% in train data set
summary(Telecom_test$Churn)  #the % of 73.45% is not churned is 73.48% test data set
rm(training.samples)
######transforming data####
Telecom_train$PaymentMethod <- ifelse(Telecom_train$PaymentMethod == "Electronic check" ,'yes','no')
Telecom_test$PaymentMethod <- ifelse(Telecom_test$PaymentMethod == "Electronic check" ,'yes','no')
Telecom_train$PaymentMethod <- as.factor(Telecom_train$PaymentMethod)
Telecom_test$PaymentMethod<- as.factor(Telecom_test$PaymentMethod)
#Classification tree
# rpart is short for r partion. It is a standard package for classification and regression trees.
##### usng the gini method to create the decision tree .
Churn_model<- rpart(Churn ~ SeniorCitizen+Dependents+tenure+PhoneService+MultipleLines+InternetService+OnlineSecurity+OnlineBackup
+TechSupport+StreamingTV+StreamingMovies+Contract+PaperlessBilling+PaymentMethod, data = Telecom_train, method = "class" , parms = list(split = "gini"))
Churn_model
#### this is for displaying the decision tree###
rpart.plot(Churn_model, main = "Telecome Customer Churn ",type = 5 , fallen.leaves = TRUE, extra = 0)
fancyRpartPlot(Churn_model , main = "Telecome Customer Churn")
#### making predictions on models using the test data####
churn_gini <- predict(object = Churn_model,
newdata = Telecom_test,
type = "class")
#### creating the confusion matrix for the model using the
cmat_gini <- confusionMatrix(data = churn_gini,
reference = Telecom_test$Churn)
cmat_gini
#Train a information-based model this is to check the entropy of the model or the degree of disorder in the model
Churn_model_information <- rpart(Churn ~ SeniorCitizen+Dependents+tenure+PhoneService+MultipleLines+InternetService+OnlineSecurity+OnlineBackup
+TechSupport+StreamingTV+StreamingMovies+Contract+PaperlessBilling+PaymentMethod, data = Telecom_train, method = "class" , parms = list(split = "information"))
###creating decision tree plot on information###
rpart.plot(Churn_model_information, main = "Telecome Customer Churn ",type = 5 , fallen.leaves = TRUE, extra = 0)
fancyRpartPlot(Churn_model_information , main = "Telecome Customer Churn")
# Save the predictions on the test models
Churn_prediction_information <- predict(object = Churn_model_information,
newdata = Telecom_test,
type = "class")
#####creating confusion matrix###
cmat_information <- confusionMatrix(data = Churn_prediction_information, reference = Telecom_test$Churn)
cmat_information
#### model accuracy####
cmat_gini$overall[["Accuracy"]]
cmat_information$overall[["Accuracy"]]
########################calculation for the logistic model 5########################
#model5 <- Logit(P) = (-0.26070) +0.188035(Senior Citizen)+(-0.171861) (Dependents Yes)+(-0.034270)(tenure) +(-0.528036)(Phone Service Yes) +(0.287644)(Multiple Lines Yes)+(0.975575)(Internet Service Fibre optic)+(-0.773786)(Internet Service No)+(-0.413111)(Online Security Yes)+(-0.150098)(Online Backup Yes)+(-0.289328)(Tech Support Yes)+(0.266155)(Streaming TV Yes)+(0.329091)(Streaming Movies Yes)+(-0.648072)(Contract One year)+(-1.372070)(Contract Two year)+(0.308419)(Paperless Billing Yes)+(0.362899)(Payment Method yes)
case1 <- (-0.26070) +0.188035*(1)+(-0.171861)*(1)+(-0.034270)*(20) +(-0.528036)*(1) +(0.287644)*(0)+(0.975575)*(1)+(-0.773786)*(0)+(-0.413111)*(1)+(-0.150098)*(1)+(-0.289328)*(1)+(0.266155)*(0)+(0.329091)*(0)+(-0.648072)*(0)+(-1.372070)*(1)+(0.308419)*(0)+(0.362899)*(0)
case1 <- exp(case1)/(1 + exp(case1))
case1 <- case1 * 100
prob_of_customer_churn <- case1
#### the probability of customer will not leave the company#####
prob_of_customer_not_churn<- 100 - prob_of_customer_churn
prob_of_customer_not_churn ### is almost 95%
case2<- (-0.26070) +0.188035*(0)+(-0.171861)*(0)+(-0.034270)*(30) +(-0.528036)*(1) +(0.287644)*(1)+(0.975575)*(1)+(-0.773786)*(0)+(-0.413111)*(1)+(-0.150098)*(1)+(-0.289328)*(1)+(0.266155)*(0)+(0.329091)*(0)+(-0.648072)*(1)+(-1.372070)*(0)+(0.308419)*(0)+(0.362899)*(0)
case2<-(exp(case2)/(1 + exp(case2)))
case2 <- case2 * 100 # probability of customer churning is 11.36%
case2 <- 100 - case2
case2# probability of not churning is 88.63%
## considering the case where customer is below 65 and has taken only phone service but no other service and is in a 1 year contract has taken paperless billign option and payment method is electronic check
case3<-(-0.26070) +0.188035*(0)+(-0.171861)*(0)+(-0.034270)*(40) +(-0.528036)*(1) +(0.287644)*(0)+(0.975575)*(0)+(-0.773786)*(1)+(-0.413111)*(0)+(-0.150098)*(0)+(-0.289328)*(0)+(0.266155)*(0)+(0.329091)*(0)+(-0.648072)*(1)+(-1.372070)*(0)+(0.308419)*(1)+(0.362899)*(1)
case3<-(exp(case3)/(1 + exp(case3)))
case3 <- case3 * 100
case3 ### there is a 5% chance the customer would leave the company
case3 <- 100 - case3
case3
#### considering a casae where customer is sernior citizen has no internet connetion and is in a monthly-to-month contract and has been with company for 10 months and have taken paperless billing and payment method is electronic check
case4 <-(-0.26070) +0.188035*(1)+(-0.171861)*(0)+(-0.034270)*(10) +(-0.528036)*(1) +(0.287644)*(0)+(0.975575)*(0)+(-0.773786)*(1)+(-0.413111)*(0)+(-0.150098)*(0)+(-0.289328)*(0)+(0.266155)*(0)+(0.329091)*(0)+(-0.648072)*(0)+(-1.372070)*(0)+(0.308419)*(1)+(0.362899)*(1)
case4<-(exp(case4)/(1 + exp(case4)))
case4 <- case4 * 100
case4 #### there is 26% chance the customer will leave the company
case4 <- 100 - case4
case4### there is 73 % chance the customer will not leave the company
#### Telecome Churn Prediction###
### Name : Rishabh khorana ###
### Student_id: 22768807###
### the script starts here###
### we are trying to predict whether the customer will leave the company or not hence the churn###
###loading the packages###
if (!require("pacman")) install.packages("pacman")
pacman::p_load(pacman, tidyverse, gmodels,caret,ROCR,corrplot,gplots,vcd,car,rpart,scales,RColorBrewer,rattle)
### reading the file ###
telecom_data <- read.csv("Telco-Customer-Churn.csv",header = TRUE,sep = ',')
str(telecom_data)
summary(telecom_data)
### conveting factors####
#### excpet tenure,monthly,total####
telecom_data$gender <- as.factor(telecom_data$gender)
telecom_data$SeniorCitizen<-as.factor(telecom_data$SeniorCitizen)
telecom_data$Partner<-as.factor(telecom_data$Partner)
telecom_data$Dependents<-as.factor(telecom_data$Dependents)
telecom_data$PhoneService<- as.factor(telecom_data$PhoneService)
telecom_data$MultipleLines<-as.factor(telecom_data$MultipleLines)
telecom_data$InternetService<-as.factor(telecom_data$InternetService)
telecom_data$OnlineSecurity<-as.factor(telecom_data$OnlineSecurity)
telecom_data$OnlineBackup<-as.factor(telecom_data$OnlineBackup)
telecom_data$DeviceProtection<-as.factor(telecom_data$DeviceProtection)
telecom_data$TechSupport<-as.factor(telecom_data$TechSupport)
telecom_data$StreamingTV<-as.factor(telecom_data$StreamingTV)
telecom_data$StreamingMovies<-as.factor(telecom_data$StreamingMovies)
telecom_data$Contract<-as.factor(telecom_data$Contract)
telecom_data$PaperlessBilling<-as.factor(telecom_data$PaperlessBilling)
telecom_data$PaymentMethod<-as.factor(telecom_data$PaymentMethod)
telecom_data$Churn<- as.factor(telecom_data$Churn)
##########################################################################
##########################################################################
str(telecom_data)
summary(telecom_data)
##############################################################################
###creating test and training data sets######
set.seed(100)
train_ind <- telecom_data$Churn %>%
createDataPartition(p = 0.70, list = FALSE) #splitting data into 70% for training and 30%  testing sets
Telecom_train <- telecom_data[train_ind,]
Telecom_test <- telecom_data[-train_ind,]
table(Telecom_train$Churn)
#### EXPLORING THE DATA SET ############
####BARPLOTS#####
### this data is from the training set####
#### EXPLORING THE QUALITATIVE VARIABLES########
#### our target vairable is CHURN#######
ggplot(Telecom_train, aes(Churn)) +geom_bar(aes(y = (..count..)/sum(..count..)),fill = "Blue") + scale_y_continuous(labels = percent) + labs(title = "Customer Churn", y = "Percentage of Customer Churn", x = "Customers left the company")
ggplot(Telecom_train, aes(gender,fill = gender,)) + geom_bar(aes(y = (..count..)/sum(..count..)), width = 0.4 ) + scale_y_continuous(labels = percent) + labs(title = "   Customer Demographics ", y = "Percentage of Customers", x = "Customer Gender")
ggplot(Telecom_train, aes(SeniorCitizen ,fill = SeniorCitizen)) + geom_bar(aes(y = (..count..)/sum(..count..)), width = 0.4 )+scale_y_continuous(labels = percent) + xlab("No. people over the age of 65") + ylab("Percentage of Customers")
ggplot(Telecom_train, aes(Partner)) + geom_bar(width = 0.5,aes(y = (..count..)/sum(..count..))) + xlab(" No.of married Customers") + scale_y_continuous(labels = percent) + ylab("Percentage of Cusomters")
ggplot(Telecom_train, aes(Dependents)) + geom_bar(width = 0.4, fill = "Black") +xlab("No.of customer with dependents")
ggplot(Telecom_train, aes(PhoneService)) + geom_bar() + xlab("No. of people opted the phone service")
ggplot(Telecom_train, aes(MultipleLines)) + geom_bar() + xlab("No. of Customers with multiple Connections")
ggplot(Telecom_train, aes(InternetService,fill = InternetService)) + geom_bar(aes(y = (..count..)/sum(..count..)),width = 0.5) + labs(title="Most Preferred Type of Internet Service ", x = "Type of internet Connection", y ="Percentage of Customers")+ scale_y_continuous(labels = percent)
ggplot(Telecom_train, aes(OnlineSecurity)) + geom_bar()
ggplot(Telecom_train, aes(OnlineBackup)) + geom_bar()
ggplot(Telecom_train, aes(DeviceProtection)) + geom_bar()
ggplot(Telecom_train, aes(TechSupport)) + geom_bar()
ggplot(Telecom_train, aes(StreamingTV)) + geom_bar()
ggplot(Telecom_train, aes(StreamingMovies)) + geom_bar()
ggplot(Telecom_train, aes(Contract, fill= Contract)) + geom_bar(aes(y = (..count..)/sum(..count..)),width = 0.7) + scale_y_continuous(labels = percent) + labs(tile ="Contract offered by the company", x = "Type of Contract" , y ="Percentage of Customers")
ggplot(Telecom_train, aes(PaperlessBilling)) + geom_bar()
ggplot(Telecom_train, aes(PaymentMethod)) + geom_bar()
#### creating graphs using quantitaive data
ggplot(Telecom_train,aes(x = tenure)) + geom_histogram(color="black", fill="white") + ylab("No. of Customers") + xlab("No. of months with company")
ggplot(Telecom_train,aes(x = MonthlyCharges)) + geom_histogram(color="black", fill="Blue")+ xlab(" Monthly charges for each customer") + ylab(" No. of Customers")
ggplot(Telecom_train,aes(x = TotalCharges/100)) + geom_histogram(color="black", fill ="Red") +xlab("Total charges paid by the customer") +ylab("No. of Customers ")
ggplot(data=Telecom_train, mapping = aes(x = gender, y = MonthlyCharges ,fill = Churn )) + geom_boxplot() + theme_bw()
#################################################################################################
### conducting a CHI  square test to find the relationship between dependents and independents###
### Chi-square test of independence####
###this would tell us weather there is a relationship between two categorical variable###
### our target variable is Churn###
### Ho: there is no relationship between churn and other variables###
### Ha: there is a level of significance between both the variables###
### using Crosstable###
#### For all the variables below we will just consider the Chi square test as all the nominal have frequency more than 5 which the sufficient
##   to validate the Chi-Square test
#### this test this not explain how strongly the variables are related but it only tells whether there is an association or not.
CrossTable(Telecom_train$Churn,Telecom_train$gender, digits=3, max.width = 5, expected=TRUE, prop.r=TRUE, prop.c=TRUE,
prop.t=TRUE, prop.chisq=FALSE, chisq = TRUE, fisher=FALSE, mcnemar=FALSE,
resid=FALSE, sresid=FALSE, asresid=FALSE,
missing.include=FALSE,
format=c("SPSS"), dnn = NULL)
CrossTable(Telecom_train$Churn,Telecom_train$SeniorCitizen, digits=3, max.width = 5, expected=TRUE, prop.r=TRUE, prop.c=TRUE,
prop.t=TRUE, prop.chisq=FALSE, chisq = TRUE, fisher=FALSE, mcnemar=FALSE,
resid=FALSE, sresid=FALSE, asresid=FALSE,
missing.include=FALSE,
format=c("SPSS"), dnn = NULL)
CrossTable(Telecom_train$Churn,Telecom_train$Partner, digits=3, max.width = 5, expected=TRUE, prop.r=TRUE, prop.c=TRUE,
prop.t=TRUE, prop.chisq=FALSE, chisq = TRUE, fisher=FALSE, mcnemar=FALSE,
resid=FALSE, sresid=FALSE, asresid=FALSE,
missing.include=FALSE,
format=c("SPSS"), dnn = NULL)
CrossTable(Telecom_train$Churn,Telecom_train$Dependents, digits=3, max.width = 5, expected=TRUE, prop.r=TRUE, prop.c=TRUE,
prop.t=TRUE, prop.chisq=FALSE, chisq = TRUE, fisher=FALSE, mcnemar=FALSE,
resid=FALSE, sresid=FALSE, asresid=FALSE,
missing.include=FALSE,
format=c("SPSS"), dnn = NULL)
CrossTable(Telecom_train$Churn,Telecom_train$PhoneService, digits=3, max.width = 5, expected=TRUE, prop.r=TRUE, prop.c=TRUE,
prop.t=TRUE, prop.chisq=FALSE, chisq = TRUE, fisher=FALSE, mcnemar=FALSE,
resid=FALSE, sresid=FALSE, asresid=FALSE,
missing.include=FALSE,
format=c("SPSS"), dnn = NULL)
CrossTable(Telecom_train$Churn,Telecom_train$MultipleLines, digits=3, max.width = 5, expected=TRUE, prop.r=TRUE, prop.c=TRUE,
prop.t=TRUE, prop.chisq=FALSE, chisq = TRUE, fisher=FALSE, mcnemar=FALSE,
resid=FALSE, sresid=FALSE, asresid=FALSE,
missing.include=FALSE,
format=c("SPSS"), dnn = NULL)
CrossTable(Telecom_train$Churn,Telecom_train$InternetService, digits=3, max.width = 5, expected=TRUE, prop.r=TRUE, prop.c=TRUE,
prop.t=TRUE, prop.chisq=FALSE, chisq = TRUE, fisher=FALSE, mcnemar=FALSE,
resid=FALSE, sresid=FALSE, asresid=FALSE,
missing.include=FALSE,
format=c("SPSS"), dnn = NULL)
CrossTable(Telecom_train$Churn,Telecom_train$OnlineSecurity, digits=3, max.width = 5, expected=TRUE, prop.r=TRUE, prop.c=TRUE,
prop.t=TRUE, prop.chisq=FALSE, chisq = TRUE, fisher=FALSE, mcnemar=FALSE,
resid=FALSE, sresid=FALSE, asresid=FALSE,
missing.include=FALSE,
format=c("SPSS"), dnn = NULL)
CrossTable(Telecom_train$Churn,Telecom_train$OnlineBackup, digits=3, max.width = 5, expected=TRUE, prop.r=TRUE, prop.c=TRUE,
prop.t=TRUE, prop.chisq=FALSE, chisq = TRUE, fisher=FALSE, mcnemar=FALSE,
resid=FALSE, sresid=FALSE, asresid=FALSE,
missing.include=FALSE,
format=c("SPSS"), dnn = NULL)
CrossTable(Telecom_train$Churn,Telecom_train$DeviceProtection, digits=3, max.width = 5, expected=TRUE, prop.r=TRUE, prop.c=TRUE,
prop.t=TRUE, prop.chisq=FALSE, chisq = TRUE, fisher=FALSE, mcnemar=FALSE,
resid=FALSE, sresid=FALSE, asresid=FALSE,
missing.include=FALSE,
format=c("SPSS"), dnn = NULL)
CrossTable(Telecom_train$Churn,Telecom_train$TechSupport, digits=3, max.width = 5, expected=TRUE, prop.r=TRUE, prop.c=TRUE,
prop.t=TRUE, prop.chisq=FALSE, chisq = TRUE, fisher=FALSE, mcnemar=FALSE,
resid=FALSE, sresid=FALSE, asresid=FALSE,
missing.include=FALSE,
format=c("SPSS"), dnn = NULL)
CrossTable(Telecom_train$Churn,Telecom_train$StreamingTV, digits=3, max.width = 5, expected=TRUE, prop.r=TRUE, prop.c=TRUE,
prop.t=TRUE, prop.chisq=FALSE, chisq = TRUE, fisher=FALSE, mcnemar=FALSE,
resid=FALSE, sresid=FALSE, asresid=FALSE,
missing.include=FALSE,
format=c("SPSS"), dnn = NULL)
CrossTable(Telecom_train$Churn,Telecom_train$StreamingMovies, digits=3, max.width = 5, expected=TRUE, prop.r=TRUE, prop.c=TRUE,
prop.t=TRUE, prop.chisq=FALSE, chisq = TRUE, fisher=FALSE, mcnemar=FALSE,
resid=FALSE, sresid=FALSE, asresid=FALSE,
missing.include=FALSE,
format=c("SPSS"), dnn = NULL)
CrossTable(Telecom_train$Churn,Telecom_train$Contract, digits=3, max.width = 5, expected=TRUE, prop.r=TRUE, prop.c=TRUE,
prop.t=TRUE, prop.chisq=FALSE, chisq = TRUE, fisher=FALSE, mcnemar=FALSE,
resid=FALSE, sresid=FALSE, asresid=FALSE,
missing.include=FALSE,
format=c("SPSS"), dnn = NULL)
CrossTable(Telecom_train$Churn,Telecom_train$PaymentMethod, digits=3, max.width = 5, expected=TRUE, prop.r=TRUE, prop.c=TRUE,
prop.t=TRUE, prop.chisq=FALSE, chisq = TRUE, fisher=FALSE, mcnemar=FALSE,
resid=FALSE, sresid=FALSE, asresid=FALSE,
missing.include=FALSE,
format=c("SPSS"), dnn = NULL)
CrossTable(Telecom_train$Churn,Telecom_train$PaperlessBilling, digits=3, max.width = 5, expected=TRUE, prop.r=TRUE, prop.c=TRUE,
prop.t=TRUE, prop.chisq=FALSE, chisq = TRUE, fisher=FALSE, mcnemar=FALSE,
resid=FALSE, sresid=FALSE, asresid=FALSE,
missing.include=FALSE,
format=c("SPSS"), dnn = NULL)
########## independent T test for numerical data to find a relationship between the variables#####
###Considering equal variances here###
t.test(Telecom_train$tenure~Telecom_train$Churn,mu=0,alternative = "two.sided",conf.level = 0.95,  var.equal = TRUE)
t.test(Telecom_train$MonthlyCharges~Telecom_train$Churn,mu=0,alternative = "two.sided",conf.level = 0.95,  var.equal = TRUE)
t.test(Telecom_train$TotalCharges~Telecom_train$Churn,mu=0,alternative = "two.sided",conf.level =0.95, var.equal= TRUE)
#### checking Multicollinearity###
test_model <- glm(Churn ~ gender+SeniorCitizen+Partner+Dependents+tenure+PhoneService+MultipleLines+InternetService+OnlineSecurity+OnlineBackup
+ DeviceProtection+TechSupport+StreamingTV+StreamingMovies+Contract+PaperlessBilling+PaymentMethod+MonthlyCharges+TotalCharges, data = Telecom_train, family = "binomial")
car::vif(test_model)
## there is high mulitcollinearity between tenure, Phone service, Internet Serivces ,Streaming TV ,Streaming Movies, Monthly Charges ,Total Charges
### after removing monthly charges
test_model1 <- glm(Churn ~ gender+SeniorCitizen+Partner+Dependents+tenure+PhoneService+MultipleLines+InternetService+OnlineSecurity+OnlineBackup
+ DeviceProtection+TechSupport+StreamingTV+StreamingMovies+Contract+PaperlessBilling+PaymentMethod+TotalCharges, data = Telecom_train, family = "binomial")
vif(test_model1)
#### after removing Total Charges
test_model2 <- glm(Churn ~ gender+SeniorCitizen+Partner+Dependents+tenure+PhoneService+MultipleLines+InternetService+OnlineSecurity+OnlineBackup
+ DeviceProtection+TechSupport+StreamingTV+StreamingMovies+Contract+PaperlessBilling+PaymentMethod, data = Telecom_train, family = "binomial")
vif(test_model2)
#### after removing monthly charges and total charges the which were interacting with other predictors had drastically reduced the VIF(Variance inflation factor) for the other variables in the model
#### for the rule of thumb GVIF^(1/2*DF) if more than 5 there is correlation between the variables
#### this has been taken care by the (test_model2)
####creating Generalized linear models####
#### backwards approach###
### for model1 we take all the variables from test_model2
### when removing the the variables we compare the p-value of the models at 5% significance level
model1 <- glm(Churn ~ gender+SeniorCitizen+Partner+Dependents+tenure+PhoneService+MultipleLines+InternetService+OnlineSecurity+OnlineBackup
+ DeviceProtection+TechSupport+StreamingTV+StreamingMovies+Contract+PaperlessBilling+PaymentMethod, data = Telecom_train, family = "binomial")
summary(model1)
###now we started building the models by removing the predictors one by one with least significant with the Churn.
#### since device protection is the least significant in the model###
model2 <- glm(Churn ~ gender+SeniorCitizen+Partner+Dependents+tenure+PhoneService+MultipleLines+InternetService+OnlineSecurity+OnlineBackup
+TechSupport+StreamingTV+StreamingMovies+Contract+PaperlessBilling+PaymentMethod, data = Telecom_train, family = "binomial")
summary(model2)
#### in model2 partner was highly insignificant so we have removed partner for model3
model3 <- glm(Churn ~ gender+SeniorCitizen+Dependents+tenure+PhoneService+MultipleLines+InternetService+OnlineSecurity+OnlineBackup
+TechSupport+StreamingTV+StreamingMovies+Contract+PaperlessBilling+PaymentMethod, data = Telecom_train, family = "binomial")
summary(model3)
### in model3  we have predictor Paymentmethod which has 3 levels of factors in it. out of these 3 we have only one which is significant.
### PaymentMethod Electronic check is significant
### PaymentMethodCredit card (automatic) and PaymentMethodMailed check are not significant
### we need to do a data transformation for in the data set to separate the levels in paymentmethod.
### our target is Electronic check
Telecom_train$PaymentMethod <- ifelse(Telecom_train$PaymentMethod == "Electronic check" ,'yes','no')
Telecom_test$PaymentMethod <- ifelse(Telecom_test$PaymentMethod == "Electronic check" ,'yes','no')
Telecom_train$PaymentMethod <- as.factor(Telecom_train$PaymentMethod)
Telecom_test$PaymentMethod<- as.factor(Telecom_test$PaymentMethod)
### Model 4 after data transformation###
model4 <- glm(Churn ~ gender+SeniorCitizen+Dependents+tenure+PhoneService+MultipleLines+InternetService+OnlineSecurity+OnlineBackup
+TechSupport+StreamingTV+StreamingMovies+Contract+PaperlessBilling+PaymentMethod, data = Telecom_train, family = "binomial")
summary(model4)
### In Model5 we  have removed gender as it is highly insignificant
### so after removing gender for model5
model5 <- glm(Churn ~ SeniorCitizen+Dependents+tenure+PhoneService+MultipleLines+InternetService+OnlineSecurity+OnlineBackup
+TechSupport+StreamingTV+StreamingMovies+Contract+PaperlessBilling+PaymentMethod, data = Telecom_train, family = "binomial")
summary(model5)
### IN Model6 we will online backup as it insignificant
### so after removing online backup for model
model6 <- glm(Churn ~ SeniorCitizen+Dependents+tenure+PhoneService+MultipleLines+InternetService+OnlineSecurity+
+TechSupport+StreamingTV+StreamingMovies+Contract+PaperlessBilling+PaymentMethod, data = Telecom_train, family = "binomial")
summary(model6)
#### In model 7 we have removed dependents
model7 <- glm(Churn ~ SeniorCitizen+tenure+PhoneService+MultipleLines+InternetService+OnlineSecurity+
+TechSupport+StreamingTV+StreamingMovies+Contract+PaperlessBilling+PaymentMethod, data = Telecom_train, family = "binomial")
summary(model7)
#### In model 8 we have removed seniorCitizens
model8 <- glm(Churn ~ tenure+PhoneService+MultipleLines+InternetService+OnlineSecurity+
+TechSupport+StreamingTV+StreamingMovies+Contract+PaperlessBilling+PaymentMethod, data = Telecom_train, family = "binomial")
summary(model8)
#### IN model6,7,8 we can see the  residuals and AIC value increases drastically which gives us an indication that our model is going into over fitting
#### So our best model is model 5
### we can condcut one more test on model 5
####Overall significance of the categorical covariates in the model###
### THE LRT test calculates the anova##
### this calculates the
anova(model1,test ="LRT")
anova(model5,test ="LRT")
###Calculating the explanatory power for each
deviance(model1)
deviance(model2)
deviance(model3)
deviance(model4)
deviance(model5)
deviance(model6)
deviance(model7)
deviance(model8)
#########
##### Creating a null mode for the formula  McFaddenModel1 = 1- deviance(model)/null_model
null_m <- glm(Churn ~ 1, data= Telecom_train,family = "binomial")
null_model <-deviance(null_m)
### Mcfadden's RSQURAED###
McFaddenModel1 = 1- deviance(model1)/null_model
McFaddenModel2 = 1- deviance(model2)/null_model
McFaddenModel3 = 1- deviance(model3)/null_model
McFaddenModel4 = 1- deviance(model4)/null_model
McFaddenModel5 = 1- deviance(model5)/null_model
McFaddenModel6 = 1- deviance(model6)/null_model
McFaddenModel7 = 1- deviance(model7)/null_model
McFaddenModel8 = 1- deviance(model8)/null_model
McFaddenModel1
McFaddenModel2
McFaddenModel3
McFaddenModel4
McFaddenModel5
McFaddenModel6
McFaddenModel7
McFaddenModel8
#####the residuals deviance is  predictors with intercept how effective they are in explaining the models.
#####the residual deviance for the model is 4070.465
##### that model5 with pseudo-R^2  or McFaddenModel5 has a value of 0.2867695 and an AIC of 4104.5
##### based on the previous predictions and comparing the aic of each we come the conclusion Model 5 would be he best choice
##### Making predcitons ####
predictions <- predict(model5,Telecom_train, type = "response")
Telecom_train <- mutate(Telecom_train, predictions = predictions)
contrasts(Telecom_train$Churn)
prediction_test <-predict(model5, Telecom_test, type="response")
Telecom_test <- mutate(Telecom_test, predictions = prediction_test)
contrasts(Telecom_test$Churn)
table(Telecom_train$Churn, predictions > 0.5)
table(Telecom_test$Churn, prediction_test > 0.5) # only consider the test confusion matrix.
###from the test model we get
### TN : 1399 , FP: 153 , FN: 271 , TP: 289
### Precision of the model : TP /(TP + FP) = 0.6538
### Recall of the model : TP/(TP + FN) = 0.5160
### Accuracy of the model : (TP + TN) /(TP+FP+TN+FN) = 1399+289/(1399+153+271+289)=0.7992
#### hence the model predicts the customer that haven't left the company  or haven't Churn with 80% accuracy.
#### 65% of the corrected predicted cases turned out to be Customers who got churned or left the company.(positive cases)(precision)
#### 51% of the predicted positive cases which explains the customer who got churned or left the company  were successfully predicted by the model.(recall)
### ROC-AUC diagram
predROCR <- prediction(prediction_test, Telecom_test$Churn)
perfROCR <- performance(predROCR, "tpr", "fpr")
plot(perfROCR, colorize = TRUE)
performance(predROCR, "auc")@y.values
abline(a=0, b=1, col="#8AB63F")
### we get an area under the curve with a value of 0.8407
### this means our classifiers the model will have a good performance.
###### Creating a decision tree here############
rm(list = ls())
# Clear plots
dev.off()
# Clear console
cat("\014")
getwd()
pacman::p_load(pacman, tidyverse, gmodels,ROCR, rpart, rpart.plot,caret,RColorBrewer,rattle)
#### loading the data
telecom_data<- read.csv("Telco-Customer-Churn.csv")
#### creating factors####
telecom_data$gender <- as.factor(telecom_data$gender)
telecom_data$SeniorCitizen<-as.factor(telecom_data$SeniorCitizen)
telecom_data$Partner<-as.factor(telecom_data$Partner)
telecom_data$Dependents<-as.factor(telecom_data$Dependents)
telecom_data$PhoneService<- as.factor(telecom_data$PhoneService)
telecom_data$MultipleLines<-as.factor(telecom_data$MultipleLines)
telecom_data$InternetService<-as.factor(telecom_data$InternetService)
telecom_data$OnlineSecurity<-as.factor(telecom_data$OnlineSecurity)
telecom_data$OnlineBackup<-as.factor(telecom_data$OnlineBackup)
telecom_data$DeviceProtection<-as.factor(telecom_data$DeviceProtection)
telecom_data$TechSupport<-as.factor(telecom_data$TechSupport)
telecom_data$StreamingTV<-as.factor(telecom_data$StreamingTV)
telecom_data$StreamingMovies<-as.factor(telecom_data$StreamingMovies)
telecom_data$Contract<-as.factor(telecom_data$Contract)
telecom_data$PaperlessBilling<-as.factor(telecom_data$PaperlessBilling)
telecom_data$PaymentMethod<-as.factor(telecom_data$PaymentMethod)
telecom_data$Churn<- as.factor(telecom_data$Churn)
## Set training and Test data setsin 80% estimation and 20% test sample
#  but maintaining the proportions of Churn for each set
set.seed(1807)
training.samples <- telecom_data$Churn %>%
createDataPartition(p = 0.80, list = FALSE) ### We have 80% in training and  20% in test data set
Telecom_train <- telecom_data[training.samples, ]
Telecom_test <- telecom_data[-training.samples, ]
summary(Telecom_train$Churn) #the % of not churned is 73.45% in train data set
summary(Telecom_test$Churn)  #the % of 73.45% is not churned is 73.48% test data set
rm(training.samples)
######transforming data####
Telecom_train$PaymentMethod <- ifelse(Telecom_train$PaymentMethod == "Electronic check" ,'yes','no')
Telecom_test$PaymentMethod <- ifelse(Telecom_test$PaymentMethod == "Electronic check" ,'yes','no')
Telecom_train$PaymentMethod <- as.factor(Telecom_train$PaymentMethod)
Telecom_test$PaymentMethod<- as.factor(Telecom_test$PaymentMethod)
######################################################################################
#Classification tree
# rpart is short for r partion. It is a standard package for classification and regression trees.
##### usng the gini method to create the decision tree .
Churn_model<- rpart(Churn ~ SeniorCitizen+Dependents+tenure+PhoneService+MultipleLines+InternetService+OnlineSecurity+OnlineBackup
+TechSupport+StreamingTV+StreamingMovies+Contract+PaperlessBilling+PaymentMethod, data = Telecom_train, method = "class" , parms = list(split = "gini"))
Churn_model
#### this is for displaying the decision tree###
rpart.plot(Churn_model, main = "Telecome Customer Churn ",type = 5 , fallen.leaves = TRUE, extra = 0)
fancyRpartPlot(Churn_model , main = "Telecome Customer Churn")
#### making predictions on models using the test data####
churn_gini <- predict(object = Churn_model,
newdata = Telecom_test,
type = "class")
#### creating the confusion matrix for the model using the
cmat_gini <- confusionMatrix(data = churn_gini,
reference = Telecom_test$Churn)
cmat_gini
#Train a information-based model this is to check the entropy of the model or the degree of disorder in the model
Churn_model_information <- rpart(Churn ~ SeniorCitizen+Dependents+tenure+PhoneService+MultipleLines+InternetService+OnlineSecurity+OnlineBackup
+TechSupport+StreamingTV+StreamingMovies+Contract+PaperlessBilling+PaymentMethod, data = Telecom_train, method = "class" , parms = list(split = "information"))
###creating decision tree plot on information###
rpart.plot(Churn_model_information, main = "Telecome Customer Churn ",type = 5 , fallen.leaves = TRUE, extra = 0)
fancyRpartPlot(Churn_model_information , main = "Telecome Customer Churn")
# Save the predictions on the test models
Churn_prediction_information <- predict(object = Churn_model_information,
newdata = Telecom_test,
type = "class")
#####creating confusion matrix###
cmat_information <- confusionMatrix(data = Churn_prediction_information, reference = Telecom_test$Churn)
cmat_information
#### model accuracy####
cmat_gini$overall[["Accuracy"]]
cmat_information$overall[["Accuracy"]]
##### so the overall accuracy of the model is 80.09%
########################calculation for the logistic model 5########################
#model5 <- Logit(P) = (-0.26070) +0.188035(Senior Citizen)+(-0.171861) (Dependents Yes)+(-0.034270)(tenure) +(-0.528036)(Phone Service Yes) +(0.287644)(Multiple Lines Yes)+(0.975575)(Internet Service Fibre optic)+(-0.773786)(Internet Service No)+(-0.413111)(Online Security Yes)+(-0.150098)(Online Backup Yes)+(-0.289328)(Tech Support Yes)+(0.266155)(Streaming TV Yes)+(0.329091)(Streaming Movies Yes)+(-0.648072)(Contract One year)+(-1.372070)(Contract Two year)+(0.308419)(Paperless Billing Yes)+(0.362899)(Payment Method yes)
case1 <- (-0.26070) +0.188035*(1)+(-0.171861)*(1)+(-0.034270)*(20) +(-0.528036)*(1) +(0.287644)*(0)+(0.975575)*(1)+(-0.773786)*(0)+(-0.413111)*(1)+(-0.150098)*(1)+(-0.289328)*(1)+(0.266155)*(0)+(0.329091)*(0)+(-0.648072)*(0)+(-1.372070)*(1)+(0.308419)*(0)+(0.362899)*(0)
case1 <- exp(case1)/(1 + exp(case1))
case1 <- case1 * 100
prob_of_customer_churn <- case1
#### the probability of customer will not leave the company#####
prob_of_customer_not_churn<- 100 - prob_of_customer_churn
prob_of_customer_not_churn ### is almost 95%
### if keeping all  parameters keeping the same as above except months being 30  and customers are not senior citizens and have taken multiple connections
#### paperless billing  and use payment method as electronic check####
case2<- (-0.26070) +0.188035*(0)+(-0.171861)*(0)+(-0.034270)*(30) +(-0.528036)*(1) +(0.287644)*(1)+(0.975575)*(1)+(-0.773786)*(0)+(-0.413111)*(1)+(-0.150098)*(1)+(-0.289328)*(1)+(0.266155)*(0)+(0.329091)*(0)+(-0.648072)*(1)+(-1.372070)*(0)+(0.308419)*(0)+(0.362899)*(0)
case2<-(exp(case2)/(1 + exp(case2)))
case2 <- case2 * 100 # probability of customer churning is 11.36%
case2 <- 100 - case2
case2# probability of not churning is 88.63%
## considering the case where customer is below 65 and has taken only phone service but no other service and is in a 1 year contract has taken paperless billign option and payment method is electronic check
case3<-(-0.26070) +0.188035*(0)+(-0.171861)*(0)+(-0.034270)*(40) +(-0.528036)*(1) +(0.287644)*(0)+(0.975575)*(0)+(-0.773786)*(1)+(-0.413111)*(0)+(-0.150098)*(0)+(-0.289328)*(0)+(0.266155)*(0)+(0.329091)*(0)+(-0.648072)*(1)+(-1.372070)*(0)+(0.308419)*(1)+(0.362899)*(1)
case3<-(exp(case3)/(1 + exp(case3)))
case3 <- case3 * 100
case3 ### there is a 5% chance the customer would leave the company
case3 <- 100 - case3
case3
#### considering a casae where customer is sernior citizen has no internet connetion and is in a monthly-to-month contract and has been with company for 10 months and have taken paperless billing and payment method is electronic check
case4 <-(-0.26070) +0.188035*(1)+(-0.171861)*(0)+(-0.034270)*(10) +(-0.528036)*(1) +(0.287644)*(0)+(0.975575)*(0)+(-0.773786)*(1)+(-0.413111)*(0)+(-0.150098)*(0)+(-0.289328)*(0)+(0.266155)*(0)+(0.329091)*(0)+(-0.648072)*(0)+(-1.372070)*(0)+(0.308419)*(1)+(0.362899)*(1)
case4<-(exp(case4)/(1 + exp(case4)))
case4 <- case4 * 100
case4 #### there is 26% chance the customer will leave the company
case4 <- 100 - case4
case4### there is 73 % chance the customer will not leave the company
